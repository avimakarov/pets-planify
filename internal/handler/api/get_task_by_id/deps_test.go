// Code generated by MockGen. DO NOT EDIT.
// Source: deps.go

// Package handler_api_get_task_by_id_test is a generated GoMock package.
package handler_api_get_task_by_id_test

import (
	context "context"
	models "pets-planify/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockServiceTasks is a mock of ServiceTasks interface.
type MockServiceTasks struct {
	ctrl     *gomock.Controller
	recorder *MockServiceTasksMockRecorder
}

// MockServiceTasksMockRecorder is the mock recorder for MockServiceTasks.
type MockServiceTasksMockRecorder struct {
	mock *MockServiceTasks
}

// NewMockServiceTasks creates a new mock instance.
func NewMockServiceTasks(ctrl *gomock.Controller) *MockServiceTasks {
	mock := &MockServiceTasks{ctrl: ctrl}
	mock.recorder = &MockServiceTasksMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceTasks) EXPECT() *MockServiceTasksMockRecorder {
	return m.recorder
}

// GetByID mocks base method.
func (m *MockServiceTasks) GetByID(ctx context.Context, id uuid.UUID) (*models.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, id)
	ret0, _ := ret[0].(*models.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockServiceTasksMockRecorder) GetByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockServiceTasks)(nil).GetByID), ctx, id)
}
