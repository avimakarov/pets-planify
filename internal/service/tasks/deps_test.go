// Code generated by MockGen. DO NOT EDIT.
// Source: deps.go

// Package service_tasks_test is a generated GoMock package.
package service_tasks_test

import (
	context "context"
	models "pets-planify/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockStorageTasks is a mock of StorageTasks interface.
type MockStorageTasks struct {
	ctrl     *gomock.Controller
	recorder *MockStorageTasksMockRecorder
}

// MockStorageTasksMockRecorder is the mock recorder for MockStorageTasks.
type MockStorageTasksMockRecorder struct {
	mock *MockStorageTasks
}

// NewMockStorageTasks creates a new mock instance.
func NewMockStorageTasks(ctrl *gomock.Controller) *MockStorageTasks {
	mock := &MockStorageTasks{ctrl: ctrl}
	mock.recorder = &MockStorageTasksMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorageTasks) EXPECT() *MockStorageTasksMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockStorageTasks) Create(ctx context.Context, userID int64) (*uuid.UUID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, userID)
	ret0, _ := ret[0].(*uuid.UUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockStorageTasksMockRecorder) Create(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockStorageTasks)(nil).Create), ctx, userID)
}

// GetByID mocks base method.
func (m *MockStorageTasks) GetByID(ctx context.Context, id uuid.UUID) (*models.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, id)
	ret0, _ := ret[0].(*models.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockStorageTasksMockRecorder) GetByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockStorageTasks)(nil).GetByID), ctx, id)
}
